pipeline {
    agent any

    parameters{
        string(name: 'NAME', defaultValue: 'piece')
    }

    stages {
        stage('SCM') {
            steps {
                sh "echo 'SCM...'"
                checkout scm
            }
        }

        stage('Springboot build'){
            steps{
                dir('backend/piece'){
                    sh '''
                    echo 'Springboot build...'
                    chmod +x gradlew
                    ./gradlew clean build
                    '''
                }
            }
        }

        stage('Dockerimage build'){
            steps {
                dir('backend/piece') {
                    script {
                        def containerExists = sh(script: "docker ps -a --format '{{.Names}}' | grep ${params.NAME}", returnStatus: true) == 0

                        if (containerExists) {
                            sh "docker stop ${params.NAME}"
                            sh "docker rm ${params.NAME}"
                            sh "docker rmi hyunjinius/springboot:latest"
                        }


                        sh '''
                        echo 'Dockerimage build...'
                        docker build -t hyunjinius/springboot:latest .
                        '''
                    }
                }
            }
        }

        stage('Deploy'){
            steps{
                dir('backend/piece'){
                    sh '''
                    echo 'Deploy BE...'
                    docker run -d --env-file ./.env --name piece hyunjinius/springboot:latest
                    '''
                }
            }
        }
    }

    post {
        success {
            script {
                def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend (color: 'good',
                message: "#  :velkoz: ${env.BUILD_NUMBER} 빌드 성공 !! ${env.JOB_NAME}\n##  ${Author_ID}\n(<${env.BUILD_URL}|Details>)",
                endpoint: 'https://meeting.ssafy.com/hooks/dk7sbx6mmbdp8yignuknexyagh',
                channel: 'jenkins202',
//              icon: 'https://www.pngfind.com/pngs/m/437-4370721_61-kb-png-pepe-giving-thumbs-up-transparent.png'
                )
            }
        }

        failure {
            script {
                def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend (color: 'danger',
                message: "#  :badgun: ${env.BUILD_NUMBER} 빌드 실패 ㅜㅜ ${env.JOB_NAME}\n##  ${Author_ID}\n(<${env.BUILD_URL}|Details>)",
                endpoint: 'https://meeting.ssafy.com/hooks/dk7sbx6mmbdp8yignuknexyagh',
                channel: 'jenkins202'
//              icon: 'https://www.iconspng.com/images/sad-pepe-feelsbadman.jpg',
                )
            }
        }
    }
}
